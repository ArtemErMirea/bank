package com.example.bank.controller;

import com.example.bank.model.entities.ClientStatus;
import com.example.bank.model.entities.Gender;
import com.example.bank.model.entities.NaturalPerson;
import com.example.bank.model.repos.GenderRepository;
import com.example.bank.model.repos.NaturalPersonRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class NaturalPersonController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private NaturalPersonRepository naturalPersonRepository;
    private GenderRepository genderRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewNaturalPerson (@RequestParam String name,
                                                     @RequestParam String surname,
                                                     @RequestParam String patronymic,
                                                     @RequestParam String  address,
                                                     @RequestParam String phoneNumber,
                                                     @RequestParam long sexId,
                                                     @RequestParam ClientStatus status) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        NaturalPerson np = new NaturalPerson();
        np.setName(name);
        np.setSurname(surname);
        np.setPatronymic(patronymic);
        np.setAddress(address);
        np.setPhoneNumber(phoneNumber);
        //np.setSex(genderRepository.findById(sexId));
        np.setStatus(status);

        return "Saved";

        // TODO довести до ума эндпойтны для создания таблиц
    }

}
